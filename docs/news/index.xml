<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KLOGG</title>
    <link>https://klogg.filimonov.dev/docs/news/</link>
    <description>Recent content on KLOGG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Dec 2020 15:42:17 +0100</lastBuildDate><atom:link href="https://klogg.filimonov.dev/docs/news/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Allocation matters</title>
      <link>https://klogg.filimonov.dev/docs/news/allocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://klogg.filimonov.dev/docs/news/allocation/</guid>
      <description>Improving memory allocation #  Performance testing #  Studying final perf tool report from previous post after switching to Hyperscan I&amp;rsquo;ve noticed some strange lines. Here it is once again:
# Overhead Command Shared Object Symbol 4.84% Thread (pooled) klogg_portable [.] std::vector&amp;lt;`QString`, std::allocator&amp;lt;`QString`&amp;gt; &amp;gt;::~vector 3.83% Thread (pooled) libklogg_tbbmalloc.so [.] rml::internal::internalPoolMalloc 3.15% Thread (pooled) klogg_portable [.] noodExec 2.97% klogg_portable libc-2.32.so [.] 0x000000000015e01f 2.92% Thread (pooled) klogg_portable [.] hs_scan 2.78% Thread (pooled) libQt5Core.</description>
    </item>
    
    <item>
      <title>Switching to Hyperscan</title>
      <link>https://klogg.filimonov.dev/docs/news/hyperscan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://klogg.filimonov.dev/docs/news/hyperscan/</guid>
      <description>Swiching to Hyprescan regular expressions engine #  Performance testing #  For years Klogg has been using regular expression engine provided by Qt library. It is based on PCRE2 with JIT compilation. However, recent performance tests have proved that regular expression matching is a bottleneck. For example, this is a report from perf tool after running a simple string search in 1Gb text file:
# Overhead Command Shared Object Symbol 17.</description>
    </item>
    
    <item>
      <title>Version 20.12 released</title>
      <link>https://klogg.filimonov.dev/docs/news/release_20.12/</link>
      <pubDate>Wed, 16 Dec 2020 15:42:17 +0100</pubDate>
      
      <guid>https://klogg.filimonov.dev/docs/news/release_20.12/</guid>
      <description>Version 20.12 #  Finally new stable version is ready. This release has several major new features.
First of all highlighters have been reworked. Now it is possible to create several sets of highlighting rules and choose active set to apply at the moment. Highlight rules has become more flexible. It is possible to colorize only matching part of line (with support for regex capture groups if present). And finally, highlighters configuration can be exported to a file and shared with collaborators.</description>
    </item>
    
    <item>
      <title>Automatic crash reporting</title>
      <link>https://klogg.filimonov.dev/docs/news/crash_reporting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://klogg.filimonov.dev/docs/news/crash_reporting/</guid>
      <description>Automatic crash reporting #  In response to several github issues about unexpected crashes I&amp;rsquo;ve implemented crash dump collection. Thanks to SDK provided by Sentry it is fairly easy to integrate Breakpad/Crashpad to collect minidumps for application crashes and send them to developers for investigation.
What is included in crash report #  Crash report provides information about:
 operating system: name, version, architecture Qt version modules that were loaded into klogg process: filename, size and hashes for symbols stacktraces for all running threads in klogg process  These minidumps do not include content of klogg process memory during the crash.</description>
    </item>
    
    <item>
      <title>Version 20.9 preview</title>
      <link>https://klogg.filimonov.dev/docs/news/release_20.9_preview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://klogg.filimonov.dev/docs/news/release_20.9_preview/</guid>
      <description>Version 20.9 #  As expected I didn&amp;rsquo;t have much time to work on klogg this summer. However, there were several free weekends, and I was able to do some bugfix and new feature development.
Preview builds can be downloaded from Github:
 Windows  Linux  Mac  Feedback is very welcome.
Changelog #  Major new features:
 Highlighters reworked: Several sets of highlighting rules can be configured and chosen using context menu Highlighters can be configured to colorize only matching part of line Added an option to match using simple strings Highlighters configuration can be exported and imported on other machine An option to choose UI style, including dark theme based on QDarkStyleSheet A menu to switch between opened files Some support for dark OS themes Some support for HiDPI displays  Bugixes and minor improvements</description>
    </item>
    
    <item>
      <title>Version 20.4 released</title>
      <link>https://klogg.filimonov.dev/docs/news/release_20.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://klogg.filimonov.dev/docs/news/release_20.4/</guid>
      <description>Version 20.4 #  During this months there were almost no new commits to klogg. For several years klogg has been my second most frequently used tool (first one being code editor) and I&amp;rsquo;ve been doing my best to improve it based on my daily experience and user feedback on github. However, since the beginning of 2020 I&amp;rsquo;ve switched to a more manager-like position. This is all very new to me, and doing this job requires tools not related to log file analysis.</description>
    </item>
    
  </channel>
</rss>
